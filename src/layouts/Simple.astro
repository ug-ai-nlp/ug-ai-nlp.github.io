---
import "./globals.css";

import Header from "@/components/astro/Header.astro";
import Footer from "@/components/astro/Footer.astro";

type Props = {
  title: string;
  description: string;
};

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />

    <title>{title}</title>

    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Geist:wght@100..900&family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap"
    />

    <!-- Facebook Meta Tags -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="github.io" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />

    <script is:inline>
      const storageKey = "ai-ug-theme";
      const el = document.documentElement;
      const systemThemes = ["light", "dark"];
      const defaultTheme = "system";
      const media = "(prefers-color-scheme: dark)";

      function setColorScheme(theme) {
        if (systemThemes.includes(theme)) {
          el.style.colorScheme = theme;
        }
      }

      function updateDOM(theme) {
        el.classList.remove(...systemThemes);
        el.classList.add(theme);
        setColorScheme(theme);
      }

      function getSystemTheme() {
        return window.matchMedia(media).matches ? "dark" : "light";
      }

      try {
        const themeName = localStorage.getItem(storageKey) || defaultTheme;
        const isSystem = themeName === "system";
        const theme = isSystem ? getSystemTheme() : themeName;
        updateDOM(theme);
      } catch {
        // ignore (localStorage might be disabled)
      }
    </script>
  </head>
  <body>
    <Header />
    <div class="flex min-h-screen flex-col justify-between">
      <slot />
      <Footer />
    </div>
  </body>
</html>
