---
type Props = {
  pathname: string;
  labs: PageLink[];
  projects: PageLink[];
  tutorials: PageLink[];
  notes: PageLink[];
};

import { AsideLink } from "@/components/react/AsideLink";
import { Search } from "@/components/react/Search";
import type { PageLink } from "@/lib/sitemap";

const { pathname, labs, projects, tutorials, notes } = Astro.props;
---

<aside
  class="sticky top-16 z-10 hidden w-80 shrink-0 lg:block lg:h-[calc(100svh-4rem-5rem)]"
>
  <div class="h-full w-full overflow-y-auto py-8">
    <div class="flex w-full flex-col items-start gap-2 pr-4">
      <AsideLink exact pathname={pathname} href="/" client:load>
        Inicio
      </AsideLink>
      <AsideLink exact pathname={pathname} href="/calendar" client:load>
        Calendario
      </AsideLink>
      {
        labs.length > 0 && (
          <span class="flex h-8 grow items-center px-3 text-sm font-medium leading-none">
            Laboratorios
          </span>
        )
      }
      {
        labs.length > 0 && (
          <div class="ml-3 w-full flex flex-col items-start gap-2 border-l pl-3">
            {labs.map((l) => (
              <AsideLink exact pathname={pathname} href={l.href} client:load>
                {l.title}
              </AsideLink>
            ))}
          </div>
        )
      }
      {
        projects.length > 0 && (
          <span class="flex h-8 grow items-center px-3 text-sm font-medium leading-none">
            Proyectos
          </span>
        )
      }
      {
        projects.length > 0 && (
          <div class="ml-3 w-full flex flex-col items-start gap-2 border-l pl-3">
            {projects.map((p) => (
              <AsideLink exact pathname={pathname} href={p.href} client:load>
                {p.title}
              </AsideLink>
            ))}
          </div>
        )
      }
      {
        tutorials.length > 0 && (
          <span class="flex h-8 grow items-center px-3 text-sm font-medium leading-none">
            Tutoriales
          </span>
        )
      }
      {
        tutorials.length > 0 && (
          <div class="ml-3 w-full flex flex-col items-start gap-2 border-l pl-3">
            {tutorials.map((t) => (
              <AsideLink exact pathname={pathname} href={t.href} client:load>
                {t.title}
              </AsideLink>
            ))}
          </div>
        )
      }
      {
        notes.length > 0 && (
          <span class="flex h-8 grow items-center px-3 text-sm font-medium leading-none">
            Notas
          </span>
        )
      }
      {
        notes.length > 0 && (
          <div class="ml-3 w-full flex flex-col items-start gap-2 border-l pl-3">
            {notes.map((n) => (
              <AsideLink exact pathname={pathname} href={n.href} client:load>
                {n.title}
              </AsideLink>
            ))}
          </div>
        )
      }
    </div>
  </div>
  <div
    class="from-background/0 to-card/100 absolute inset-x-0 top-0 h-8 bg-gradient-to-t"
  >
  </div>
  <div
    class="from-background/0 to-card/100 absolute inset-x-0 bottom-0 h-8 bg-gradient-to-b"
  >
  </div>
  <Search
    client:load
    pathname={pathname}
    labs={labs}
    projects={projects}
    tutorials={tutorials}
    notes={notes}
  />
</aside>
